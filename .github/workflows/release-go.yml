name: Release Go Binding

on:
  push:
    tags:
      - 'go-v[0-9]+.[0-9]+.[0-9]+'
      - 'go-v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'
      - 'go-v[0-9]+.[0-9]+.[0-9]+-beta[0-9]+'
      - 'go-v[0-9]+.[0-9]+.[0-9]+-alpha[0-9]+'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        default: 'go-v0.0.0'
jobs:

#  go-test:
#    name: Lint and Test Go Binding
#    uses: ./.github/workflows/go-test.yml

  tag:
#    needs: [ go-test ]
    runs-on: ubuntu-latest
    name: Get Tag
    steps:
      - name: Get Tag From Ref
        id: tag-ref
        if: github.event_name == 'push'
        shell: bash
        run: |
          set -e
          # Extract the tag name from GITHUB_REF
          FULL_TAG=${GITHUB_REF#refs/tags/}
          echo "Full tag: $FULL_TAG"
          # Remove the 'go-' prefix
          STRIPPED_TAG=${FULL_TAG#go-}
          echo "Stripped tag: $STRIPPED_TAG"
          # Set the output variable
          echo "tag=$STRIPPED_TAG" >> $GITHUB_OUTPUT

      - name: Get Tag From Input
        id: tag-input
        if: github.event_name == 'workflow_dispatch'
        shell: bash
        run: |
          set -e
          FULL_TAG=${{ github.event.inputs.tag }}
          echo "Full tag: $FULL_TAG"
          # Remove the 'go-' prefix
          STRIPPED_TAG=${FULL_TAG#go-}
          echo "Stripped tag: $STRIPPED_TAG"
          
          # Validate the tag format
          if ! [[ $STRIPPED_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+|-beta[0-9]+|-alpha[0-9]+)?$ ]]; then
            echo "Error: Invalid tag format. Expected format: v1.2.3, v1.2.3-rc1, v1.2.3-beta1, or v1.2.3-alpha1 but got: $STRIPPED_TAG"
            exit 1
          fi
          
          # Set the output variable
          echo "tag=$STRIPPED_TAG" >> $GITHUB_OUTPUT
      

      - name: Output tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            TAG=${{ steps.tag-ref.outputs.tag }}
          else
            TAG=${{ steps.tag-input.outputs.tag }}
          fi
          echo "Tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_ENV
        shell: bash

#  build-linux-binaries:
#    name: Build Linux Binaries
#    needs: [ go-test , tag ]
#    uses: ./.github/workflows/build-binaries-linux.yml
#    with:
#      tag: ${{ needs.tag.outputs.tag }}
#
#  build-macos-binaries:
#    name: Build MacOS Binaries
#    needs: [ go-test , tag ]
#    uses: ./.github/workflows/build-binaries-macos.yml
#    with:
#      tag: ${{ needs.tag.outputs.tag }}

  build-windows-binaries:
    name: Build Windows Binaries
    needs: [  tag ] #go-test
    uses: ./.github/workflows/build-binaries-windows.yml
    with:
      tag: ${{ needs.tag.outputs.tag }}