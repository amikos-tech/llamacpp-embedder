name: Build Windows Binaries

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        type: string

jobs:
  windows-latest-cmake:
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - build: 'noavx-x64'
            defines: ''
# TODO: Add support for ARM64 as part of #63
#          - build: 'llvm-arm64'
#            defines: '-G "Ninja Multi-Config" -D CMAKE_TOOLCHAIN_FILE=vendor/llama.cpp/cmake/arm64-windows-llvm.cmake'
#          - build: 'msvc-arm64'
#            defines: '-G "Ninja Multi-Config" -D CMAKE_TOOLCHAIN_FILE=vendor/llama.cpp/cmake/arm64-windows-msvc.cmake'

    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Ninja
        id: install_ninja
        run: |
          choco install ninja

      - name: Build and Test
        id: cmake_build
        run: |
          $env:CMAKE_FLAGS = '-S . ${{ matrix.defines }}'
          $env:CMAKE_BUILD_FLAGS = "-j $env:NUMBER_OF_PROCESSORS"
          make lib-test

      - name: Pack artifacts
        id: pack_artifacts
        run: |
          mkdir artifact-pack
          copy .\build\Release\llama-embedder.*  artifact-pack\
          copy .\LICENSE.md artifact-pack\LICENSE.md
          copy .\vendor\llama.cpp\LICENSE artifact-pack\LICENSE-llama.cpp
          cd artifact-pack
          7z a llama-embedder-win-${{ matrix.build }}-${{ inputs.tag }}.zip *

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: llama-embedder-win-${{ matrix.build }}-${{ inputs.tag }}.zip
          name: llama-embedder-win-${{ matrix.build }}