name: Build Linux Binaries

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag to build'
        required: true
        type: string

jobs:
  ubuntu-latest-cmake-x64:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libcurl4-openssl-dev

      - name: Build and Test
        id: cmake_build
        run: |
          export CMAKE_BUILD_FLAGS="-j $(nproc)"
          make lib-test


      - name: Pack artifacts
        id: pack_artifacts
        run: |
          mkdir artifact-pack
          cp ./build/libllama-embedder.* ./artifact-pack
          cp ./LICENSE.md ./artifact-pack
          cp ./vendor/llama.cpp/LICENSE ./artifact-pack/LICENSE-llama.cpp
          tar -czf llama-embedder-linux-x64-${{ inputs.tag }}.tar.gz -C ./artifact-pack .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: llama-embedder-linux-x64-${{ inputs.tag }}.tar.gz
          name: llama-embedder-linux-x64

  ubuntu-latest-cmake-arm64:
    runs-on: ubuntu-24.04
    steps:
      - name: Clone
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libcurl4-openssl-dev

      - name: Build and Test
        id: cmake_build
        run: |
          export CMAKE_BUILD_FLAGS="-j $(nproc)"
          make lib-test

      - name: Pack artifacts
        id: pack_artifacts
        run: |
          mkdir artifact-pack
          cp ./build/libllama-embedder.* ./artifact-pack
          cp ./LICENSE.md ./artifact-pack
          cp ./vendor/llama.cpp/LICENSE ./artifact-pack/LICENSE-llama.cpp
          tar -czf llama-embedder-linux-arm64-${{ inputs.tag }}.tar.gz -C ./artifact-pack .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: llama-embedder-linux-arm64-${{ inputs.tag }}.tar.gz
          name: llama-embedder-linux-arm64
